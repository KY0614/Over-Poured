#pragma once
#include <memory>
#include "SceneBase.h"
#include "../Object/Common/Transform.h"

class SceneManager;
class AnimationController;
class ModelRenderer;
class ModelMaterial;


class TitleScene : public SceneBase
{

public:
	//UVスケール
	static constexpr float TILLING_SIZE = 35.0f;

	static constexpr float AMBIENT_COLOR = 0.2f;

	static constexpr int LOGO_OFFSET_Y = 80;
	static constexpr int LOGO_HEIGHT = 1024;
	static constexpr int PUSHIMG_OFFSET_Y = 100;

	//コンストラクタ
	TitleScene(void);

	//デストラクタ
	~TitleScene(void);

	void Init(void) override;
	void Update(void) override;
	void Draw(void) override;

private:
	//マテリアル
	std::unique_ptr<ModelMaterial> material_;
	//レンダラ
	std::unique_ptr<ModelRenderer> renderer_;

	//画像
	int pushImg_;
	int titleImg_;

	//お店用
	Transform cafeTran_;

	//地面用
	Transform graoundTran_;

	//キャラクター
	Transform charactor_;

	//アニメーション
	std::unique_ptr<AnimationController> animationController_;

	/// <summary>
	/// マテリアル情報初期化
	/// </summary>
	/// <param name="">マテリアルの定数バッファ設定</param>
	void InitMaterial(void);

	void UpdateDebugImGui(void);
};
